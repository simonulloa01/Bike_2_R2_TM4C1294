// include "llvm.saw";
include "helpers.saw";


import "bike2_test.cry";

// Prior to running the verification be sure to have all the valid files. 
// These include the .bc/.saw/.c/.cry

print "Loading the bike2_test module";
bike2_test_bc <- llvm_load_module "bike2_test.bc";

let modAdd_spec = do {
  // Create symbolic integers and pointers to them.
  (a, ap) <- ptr_to_fresh "a" (llvm_int 32);
  (b, bp) <- ptr_to_fresh "b" (llvm_int 32);

  // Execute the function with the pointer parameters.
  llvm_execute_func [ap, bp];

  // Use Cryptol to specify the desired return value.
  let modAdd_res = {{ modAdd (a, b) }};
  llvm_return (llvm_term {{ modAdd_res }});
};

// Verify C function modAdd using modAdd_spec.
llvm_verify bike2_test_bc "modAdd" [] true modAdd_spec yices;

print "Done.";
